services:
  zookeeper:
    image: bitnami/zookeeper:3.8.3
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.5.1
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka 
  spark:
    image: bitnami/spark:3.5.1
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"

  spark-worker:
    image: bitnami/spark:3.5.1
    depends_on: [spark]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077

  processing:
    build:
      context: ../services/processing/spark
    depends_on:
      - kafka
      - spark
    ports:
      - "4041:4040"
    command: >
      spark-submit
      --conf spark.ui.port=4040
      --conf spark.driver.bindAddress=0.0.0.0
      --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1
      --master spark://spark:7077
      /opt/bitnami/spark/app/stream_agg.py


  airflow:
    image: apache/airflow:2.8.0
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
    volumes:
      - ./dags:/opt/airflow/dags
    ports:
      - "8081:8080"
    command: >
      bash -c "airflow db init &&
               airflow scheduler & airflow webserver"

  metabase:
    image: metabase/metabase:v0.47.3
    ports:
      - "3000:3000"

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: metriq
      POSTGRES_PASSWORD: metriq
      POSTGRES_DB: fleet
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  kafka_data:
  airflow_data:
  pg_data:
